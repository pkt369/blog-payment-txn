spring.application.name=transaction
# common DB
spring.datasource.global.url=jdbc:postgresql://postgres-global:5432/global_db
spring.datasource.global.username=postgres
spring.datasource.global.password=postgres
spring.datasource.global.driver-class-name=org.postgresql.Driver
spring.datasource.global.hikari.maximum-pool-size=50
spring.datasource.global.hikari.minimum-idle=5
spring.datasource.global.hikari.connection-timeout=30000
spring.datasource.hikari.minimum-idle=10

# Shard DBs
spring.datasource.shards.db0.url=jdbc:postgresql://postgres-shard1:5432/payment_db
spring.datasource.shards.db0.username=postgres
spring.datasource.shards.db0.password=postgres

spring.datasource.shards.db1.url=jdbc:postgresql://postgres-shard2:5432/payment_db
spring.datasource.shards.db1.username=postgres
spring.datasource.shards.db1.password=postgres

spring.datasource.shards.db2.url=jdbc:postgresql://postgres-shard3:5432/payment_db
spring.datasource.shards.db2.username=postgres
spring.datasource.shards.db2.password=postgres

spring.datasource.shards.db3.url=jdbc:postgresql://postgres-shard4:5432/payment_db
spring.datasource.shards.db3.username=postgres
spring.datasource.shards.db3.password=postgres

spring.datasource.shards.db4.url=jdbc:postgresql://postgres-shard5:5432/payment_db
spring.datasource.shards.db4.username=postgres
spring.datasource.shards.db4.password=postgres

# Kafka broker
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.properties.security.protocol=PLAINTEXT

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.partitioner.class=org.apache.kafka.clients.producer.RoundRobinPartitioner
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=1
spring.kafka.producer.properties.request.timeout.ms=60000
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.spring.json.add.type.headers=true

# Consumer
spring.kafka.consumer.group-id=payment-consumers
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.properties.spring.json.trusted.packages=dev.junlog.payment.txn.transaction.*
spring.kafka.consumer.properties.spring.json.use.type.headers=true
spring.kafka.consumer.properties.spring.json.remove.type.headers=true
spring.kafka.consumer.properties.spring.json.value.default.type=dev.junlog.payment.txn.transaction.event.TransactionEvent
spring.kafka.consumer.max-poll-records=10

# Topic name
app.kafka.topics.transactions=payment-transactions

spring.kafka.listener.concurrency=1500
